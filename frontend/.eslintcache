[{"/home/shreyas/dev/ass1/2019113004/frontend/src/index.js":"1","/home/shreyas/dev/ass1/2019113004/frontend/src/App.js":"2","/home/shreyas/dev/ass1/2019113004/frontend/src/reportWebVitals.js":"3","/home/shreyas/dev/ass1/2019113004/frontend/src/components/Login.js":"4","/home/shreyas/dev/ass1/2019113004/frontend/src/components/Signup.js":"5","/home/shreyas/dev/ass1/2019113004/frontend/src/store/store.js":"6","/home/shreyas/dev/ass1/2019113004/frontend/src/store/actions.js":"7","/home/shreyas/dev/ass1/2019113004/frontend/src/store/reducer.js":"8","/home/shreyas/dev/ass1/2019113004/frontend/src/store/actionTypes.js":"9","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Profile.js":"10","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Profile.js":"11","/home/shreyas/dev/ass1/2019113004/frontend/src/components/Navbar.js":"12","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_MyApplications.js":"13","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Dashboard.js":"14","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_CreateJob.js":"15","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_AcceptedApplicants.js":"16","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Dashboard.js":"17","/home/shreyas/dev/ass1/2019113004/frontend/src/components/styles.js":"18","/home/shreyas/dev/ass1/2019113004/frontend/src/store/localStorage.js":"19","/home/shreyas/dev/ass1/2019113004/frontend/src/misc.js":"20","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Job.js":"21"},{"size":478,"mtime":1610627350539,"results":"22","hashOfConfig":"23"},{"size":1511,"mtime":1611081410252,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1610583457261,"results":"25","hashOfConfig":"23"},{"size":3931,"mtime":1611344826487,"results":"26","hashOfConfig":"23"},{"size":4603,"mtime":1611413247144,"results":"27","hashOfConfig":"23"},{"size":536,"mtime":1611404656710,"results":"28","hashOfConfig":"23"},{"size":3144,"mtime":1611407046594,"results":"29","hashOfConfig":"23"},{"size":864,"mtime":1611307038953,"results":"30","hashOfConfig":"23"},{"size":330,"mtime":1611306947330,"results":"31","hashOfConfig":"23"},{"size":11716,"mtime":1611344792938,"results":"32","hashOfConfig":"23"},{"size":3960,"mtime":1611344160029,"results":"33","hashOfConfig":"23"},{"size":2786,"mtime":1611344842818,"results":"34","hashOfConfig":"23"},{"size":5014,"mtime":1611412344069,"results":"35","hashOfConfig":"23"},{"size":14069,"mtime":1611413546141,"results":"36","hashOfConfig":"23"},{"size":9038,"mtime":1611344995903,"results":"37","hashOfConfig":"23"},{"size":7584,"mtime":1611412064798,"results":"38","hashOfConfig":"23"},{"size":6653,"mtime":1611411969102,"results":"39","hashOfConfig":"23"},{"size":816,"mtime":1611325415590,"results":"40","hashOfConfig":"23"},{"size":414,"mtime":1611305743013,"results":"41","hashOfConfig":"23"},{"size":1098,"mtime":1611255665402,"results":"42","hashOfConfig":"23"},{"size":7994,"mtime":1611412013489,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xdrnbf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shreyas/dev/ass1/2019113004/frontend/src/index.js",[],["91","92"],"/home/shreyas/dev/ass1/2019113004/frontend/src/App.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/reportWebVitals.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/Login.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/Signup.js",["93"],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/store.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/actions.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/reducer.js",["94"],"import * as actionTypes from './actionTypes'\nimport { v1 as uuid } from 'uuid'\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n\n    case actionTypes.CREATE_USER:\n      return {\n        ...state,\n        user: action.payload.user\n      }\n\n    case actionTypes.LOGIN:\n    case actionTypes.GET_APPLICANT:\n      return {\n        ...state,\n        user: action.payload.user\n      }\n\n    case actionTypes.EDIT_RECRUITER:\n    case actionTypes.EDIT_APPLICANT:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload.user }\n      }\n\n    case actionTypes.GET_APPLICANTS:\n      return {\n        ...state,\n        applicants: action.payload.applicants\n      }\n\n    case actionTypes.GET_JOBS:\n      return {\n        ...state,\n        jobs: action.payload.jobs\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","/home/shreyas/dev/ass1/2019113004/frontend/src/store/actionTypes.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Profile.js",["95","96","97","98","99","100","101","102"],"import '../App.css'\nimport Navbar from './Navbar'\nimport * as misc from '../misc'\n\nimport React, { Component } from 'react'\nimport { Alert, Container, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap'\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Rating } from '@material-ui/lab';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Button, ButtonGroup, CssBaseline, TextField, Grid, Box } from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass A_Profile extends Component {\n\n  state = { type: \"applicant\" }\n\n  async componentDidMount() {\n    await this.props.getApplicant(this.state._id)\n    this.setState({ componentLoaded: true })\n  }\n\n  constructor(props) {\n    super(props)\n\n    try {\n      this.state._id = this.props.state.user._id\n      this.state.email = this.props.state.user.email\n      this.state.name = this.props.state.user.name\n      this.state.education = this.props.state.user.education\n      this.state.skills = this.props.state.user.skills\n\n      if (!this.state.education) { this.state.education = [] }\n      if (!this.state.skills) { this.state.skills = [] }\n\n      this.state.modal = false\n      this.state.skillModal = false\n\n      this.state.institute = \"\"\n      this.state.startYear = 0\n      this.state.endYear = 0\n\n      this.state.skill = \"\"\n\n      this.state.componentLoaded = false\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  calcRating = (ratings) => {\n    let total = 0\n    for (let i = 0; i < ratings.length; i++) {\n      let item = ratings[i]\n      total = total + item.rating / ratings.length\n    }\n    return total\n  }\n\n  formSubmit = async () => {\n\n    if (!misc.required([this.state.name, this.state.email, this.state.education, this.state.skills])\n      || !misc.validate([misc.verifyEmail], [this.state.email])) {\n      alert(\"Enter Valid Details\")\n      return\n    }\n\n    let user = {\n      type: \"applicant\",\n      name: this.state.name,\n      email: this.state.email,\n      education: this.state.education,\n      skills: this.state.skills\n    }\n\n    await this.props.editApplicant(user)\n\n    this.props.history.push(\"/a/dashboard\")\n  }\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  skillToggle = () => {\n    this.setState({ skillModal: !this.state.skillModal })\n  }\n\n  selectSkill = (event) => {\n    if (this.state.skills.filter(item => item == event.target.innerText.toLowerCase()).length) {\n      alert(\"Skill already exists\")\n      return\n    }\n    this.setState({\n      skills: [...this.state.skills, event.target.innerText.toLowerCase()]\n    })\n  }\n\n  render() {\n    if (!this.state.componentLoaded) { return <div></div> }\n\n    let ratings, rating\n\n    try {\n\n      ratings = this.props.state.user.ratings\n      if (!ratings) { ratings = [] }\n\n      rating = this.calcRating(ratings)\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n\n    const { classes } = this.props\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Navbar page={\"Profile\"} type={\"applicant\"} />\n\n        <CssBaseline />\n        <div className={classes.paper}>\n\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating name=\"read-only\" value={rating} readOnly />\n          </Box>\n\n\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n\n              <Grid item xs={6}>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"name\"\n                  id=\"name\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Name\"\n                  autoFocuss\n                  value={this.state.name}\n                  onChange={(event) => { this.setState({ name: event.target.value }) }}\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  autoComplete=\"email\"\n                  value={this.state.email}\n                  onChange={(event) => { this.setState({ email: event.target.value }) }}\n                />\n              </Grid>\n\n              <Grid container spacing={2}>\n                {this.state.education?.length ? (<Container><br /><Alert style={{ textAlign: \"center\" }} color=\"light\"><h5 >Education</h5></Alert></Container>) : (<div></div>)}\n                {this.state.education?.map(({ id, institute, startYear, endYear }) => (\n                  <Grid item>\n                    <Alert color=\"dark\" toggle={() => {\n                      this.setState({\n                        education: this.state.education.filter((item) => item.id != id)\n                      })\n                    }}>\n                      {institute} ({startYear} - {endYear})\n                  </Alert>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <br /><br />\n\n              <Grid container spacing={2}>\n                {this.state.skills?.length ? (<Container><br /><Alert style={{ textAlign: \"center\" }} color=\"light\"><h5>Skills</h5></Alert></Container>) : (<div></div>)}\n\n                {this.state.skills?.map((skill) => (\n                  <Grid item>\n                    <Alert color=\"dark\" toggle={() => {\n                      this.setState({\n                        skills: this.state.skills.filter((item) => item != skill)\n                      })\n                    }}>\n                      {skill}\n                    </Alert>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <Modal isOpen={this.state.skillModal} toggle={this.skillToggle}>\n                <ModalHeader toggle={this.skillToggle}>Select Skill</ModalHeader>\n                <ModalBody>\n                  <Container>\n                    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                      <Button onClick={this.selectSkill}>C++</Button>\n                      <Button onClick={this.selectSkill}>C</Button>\n                      <Button onClick={this.selectSkill}>python</Button>\n                      <Button onClick={this.selectSkill}>javascript</Button>\n                      <Button onClick={this.selectSkill}>ruby</Button>\n                      <Button onClick={this.selectSkill}>HTML</Button>\n                      <Button onClick={this.selectSkill}>CSS</Button>\n                    </ButtonGroup>\n                  </Container>\n                </ModalBody>\n              </Modal>\n\n              <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>Enter education details</ModalHeader>\n                <ModalBody>\n                  <Form>\n                    <FormGroup>\n\n                      <Box m=\"1rem\">\n                        <Label for=\"institute\">Institute</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"institute\"\n                          placeholder=\"Institute Name\"\n                          onChange={(event) => { this.setState({ institute: event.target.value }) }}\n                        />\n                      </Box>\n\n                      <Box m=\"1rem\">\n                        <Label for=\"startYear\">Start Year</Label>\n                        <Input\n                          type=\"number\"\n                          id=\"startYear\"\n                          placeholder=\"Start Year\"\n                          onChange={(event) => { this.setState({ startYear: event.target.value }) }}\n                        />\n                      </Box>\n\n                      <Box m=\"1rem\">\n                        <Label for=\"endYear\">End Year</Label>\n                        <Input\n                          type=\"number\"\n                          id=\"endYear\"\n                          placeholder=\"End Year\"\n                          onChange={(event) => { this.setState({ endYear: event.target.value }) }}\n                        />\n                      </Box>\n                      <Button\n                        onClick={() => {\n                          if (this.state.institute == \"\" || this.state.startYear == \"\" || this.state.endYear == \"\") {\n                            alert(\"Enter all required details\")\n                            return\n                          }\n                          this.setState({\n                            education: [...this.state.education, {\n                              id: `${this.state.institute}${this.state.startYear}${this.state.startYear}`,\n                              institute: this.state.institute,\n                              startYear: this.state.startYear,\n                              endYear: this.state.endYear\n                            }]\n                          })\n                          this.toggle()\n                        }}\n                      >Save\n                      </Button>\n\n                    </FormGroup>\n                  </Form>\n                </ModalBody>\n              </Modal>\n\n            </Grid>\n\n            <br />\n\n            <div style={{ display: 'flex', justifyContent: \"center\" }}>\n\n              <div style={{ margin: \"1rem\" }}>\n                <TextField\n                  className={classes.submit}\n                  variant=\"outlined\"\n                  label=\"skill\"\n                  value={this.state.skill}\n                  onChange={(event) => { this.setState({ skill: event.target.value }) }}\n                />\n                <Button\n                  className={classes.submit}\n                  style={{ marginRight: \"3rem\" }}\n                  variant=\"outlined\"\n                  onClick={() => {\n                    this.setState({\n                      skillModal: true\n                    })\n                  }}>\n                  <ArrowDropDown />\n                </Button>\n\n                <Button\n                  style={{ maxHeight: \"2rem\", marginRight: \"10%\" }}\n                  variant=\"contained\"\n                  onClick={() => {\n                    if (this.state.skills.filter(item => item == this.state.skill).length) {\n                      alert(\"Skill already exists\")\n                      return\n                    }\n                    if (this.state.skill == \"\") {\n                      alert(\"Enter a skill\")\n                      return\n                    }\n                    this.setState({\n                      skills: [...this.state.skills, this.state.skill],\n                      skill: \"\"\n                    })\n                  }}>\n                  Add Skill\n              </Button>\n              </div>\n\n\n\n\n\n\n              <div>\n                <Button\n                  variant=\"contained\"\n                  onClick={this.toggle}\n                  className={classes.submit}\n                >\n                  Add Education\n            </Button>\n\n                <Button\n                  style={{ marginLeft: \"2rem\" }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => { this.formSubmit() }}>\n                  Save Changes\n            </Button>\n              </div>\n\n            </div>\n\n\n          </form>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(A_Profile))","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Profile.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/Navbar.js",["103"],"import '../App.css'\n\nimport React, { Component } from 'react'\nimport { Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText } from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Link as RouterLink } from 'react-router-dom'\n\nfunction Links(props) {\n  if (props.type == \"applicant\") {\n    return (\n      <Container>\n        <NavItem>\n          <RouterLink to=\"/a/dashboard\"><NavLink>Dashboard</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/a/applications\"><NavLink>My Applications</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/a/profile\"><NavLink>Profile</NavLink></RouterLink>\n        </NavItem>\n      </Container>\n    )\n  }\n  else {\n    return (\n      <Container>\n        <NavItem>\n          <RouterLink to=\"/r/dashboard\"><NavLink>Dashboard</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/r/createjob\"><NavLink>Create Job</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/r/accepted\"><NavLink>Accepted Applicants</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/r/profile\"><NavLink>Profile</NavLink></RouterLink>\n        </NavItem>\n      </Container>\n    )\n  }\n}\n\nclass FixedNavbar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n      name: \"\"\n    }\n    try {\n      this.state.name = this.props.state.user.name\n    } catch { }\n  }\n\n  toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render() {\n    return (\n      <div>\n\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>{this.props.page}</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n\n              <Links type={this.props.type} />\n\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Not you?\n                                </DropdownToggle>\n\n                <DropdownMenu right>\n                  <RouterLink to=\"/\">\n                    <DropdownItem>\n                      Logout\n                                    </DropdownItem>\n                  </RouterLink>\n                </DropdownMenu>\n\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>{this.state.name}</NavbarText>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(FixedNavbar)","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_MyApplications.js",["104","105","106","107","108","109","110"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Dashboard.js",["111","112","113","114","115","116","117","118","119","120","121","122","123"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_CreateJob.js",["124","125","126","127","128","129"],"import '../App.css'\nimport Navbar from './Navbar'\nimport * as misc from '../misc'\n\nimport React, { Component } from 'react'\nimport { Alert, Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nimport DatePicker from 'react-date-picker'\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container, Button, ButtonGroup, Select, FormControl, MenuItem, InputLabel, CssBaseline, TextField, Grid } from '@material-ui/core';\nimport { ArrowDropDown, Delete as DeleteIcon } from '@material-ui/icons'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass R_CreateJob extends Component {\n\n  state = {\n    title: \"\",\n    maxApplications: null,\n    maxPositions: null,\n    deadline: null,\n    skills: [],\n    jobType: \"\",\n    duration: null,\n    salary: null,\n\n    skillModal: false,\n    skill: \"\",\n    menuOpen: false,\n    durationMenuOpen: false\n  }\n\n  constructor(props) {\n    super(props)\n\n    try {\n      this.state._id = this.props.state.user._id\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  skillToggle = () => {\n    this.setState({ skillModal: !this.state.skillModal })\n  }\n\n  selectSkill = (event) => {\n    if (this.state.skills.filter(item => item == event.target.innerText.toLowerCase()).length) {\n      alert(\"Skill already exists\")\n      return\n    }\n    this.setState({\n      skills: [...this.state.skills, event.target.innerText.toLowerCase()]\n    })\n  }\n\n  formSubmit = async () => {\n\n    if (!misc.required([this.state.title, this.state.maxApplications, this.state.maxPositions,\n    this.state.deadline, this.state.skills, this.state.jobType, this.state.duration, this.state.salary])) {\n      alert(\"Please sumbit all required details.\")\n      return\n    }\n\n    if (!misc.validate([misc.verifyNumber, misc.verifyNumber, misc.verifyNumber],\n      [this.state.maxApplications, this.state.maxPositions, this.state.salary])) {\n      alert(\"Please submit valid details\")\n      return\n    }\n\n    let job = {\n      r_id: this.state._id,\n      title: this.state.title,\n      email: this.props.state.user.email,\n      name: this.props.state.user.name,\n      maxApplications: this.state.maxApplications,\n      maxPositions: this.state.maxPositions,\n      deadline: this.state.deadline,\n      skills: this.state.skills,\n      jobType: this.state.jobType,\n      duration: this.state.duration,\n      salary: this.state.salary\n    }\n    let res = await this.props.createJob(job)\n    this.props.history.push(\"/r/dashboard\")\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Container>\n        <Navbar page={\"Create Job\"} type={\"recruiter\"} />\n        <CssBaseline />\n\n        <div className={classes.paper}>\n          <form className={classes.form} noValidate>\n\n            <TextField\n              type=\"text\"\n              variant=\"outlined\"\n              required\n              label=\"Title\"\n              onChange={(event) => { this.setState({ title: event.target.value }) }}\n            />\n\n            <br /><br />\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              required\n              label=\"Maximum Applicants\"\n              onChange={(event) => { this.setState({ maxApplications: event.target.value }) }}\n            />\n\n            {\" \"}\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              required\n              label=\"Maximum Positions\"\n              onChange={(event) => { this.setState({ maxPositions: event.target.value }) }}\n            />\n\n            <br /><br />\n\n            <DatePicker\n              format=\"dd-MM-y\"\n              value={this.state.deadline}\n              onChange={(value) => { this.setState({ deadline: value }) }}\n            />\n\n            <br /><br />\n\n            <Grid container spacing={2}>\n              {this.state.skills?.length ? (<Container><br /><Alert style={{ textAlign: \"center\" }} color=\"dark\"><h5>Skills</h5></Alert></Container>) : (<div></div>)}\n\n              {this.state.skills?.map((skill) => (\n                <Grid item>\n                  <Alert color=\"light\" toggle={() => {\n                    this.setState({\n                      skills: this.state.skills.filter((item) => item != skill)\n                    })\n                  }}>\n                    <span style={{ color: \"black\" }}>{skill}</span>\n                  </Alert>\n                </Grid>\n              ))}\n            </Grid>\n\n            <Modal isOpen={this.state.skillModal} toggle={this.skillToggle}>\n              <ModalHeader toggle={this.skillToggle}>Select Skill</ModalHeader>\n              <ModalBody>\n                <Container>\n                  <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                    <Button onClick={this.selectSkill}>C++</Button>\n                    <Button onClick={this.selectSkill}>C</Button>\n                    <Button onClick={this.selectSkill}>python</Button>\n                    <Button onClick={this.selectSkill}>javascript</Button>\n                    <Button onClick={this.selectSkill}>ruby</Button>\n                    <Button onClick={this.selectSkill}>HTML</Button>\n                    <Button onClick={this.selectSkill}>CSS</Button>\n                  </ButtonGroup>\n                </Container>\n              </ModalBody>\n            </Modal>\n            <TextField\n              variant=\"outlined\"\n              label=\"skill\"\n              value={this.state.skill}\n              onChange={(event) => { this.setState({ skill: event.target.value }) }}\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                if (this.state.skills.filter(item => item == this.state.skill).length) {\n                  alert(\"Skill already exists\")\n                  return\n                }\n                if (this.state.skill == \"\") {\n                  alert(\"Enter a skill\")\n                  return\n                }\n                this.setState({\n                  skills: [...this.state.skills, this.state.skill],\n                  skill: \"\"\n                })\n              }}>\n              Add Skill\n              </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                this.setState({\n                  skillModal: true\n                })\n              }}>\n              Select a skill <ArrowDropDown />\n            </Button>\n\n            <br /><br />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"job-label\">Job Type</InputLabel>\n              <Select\n                labelId=\"job-label\"\n                open={this.state.menuOpen}\n                onClose={() => { this.setState({ menuOpen: false }) }}\n                onOpen={() => { this.setState({ menuOpen: true }) }}\n                value={this.state.jobType}\n                onChange={(event) => { this.setState({ jobType: event.target.value }) }}\n              >\n                <MenuItem value=\"Full-Time\">Full-Time</MenuItem>\n                <MenuItem value=\"Part-Time\">Part-Time</MenuItem>\n                <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"duration-label\">Duration</InputLabel>\n              <Select\n                labelId=\"duration-label\"\n                open={this.state.durationMenuOpen}\n                onClose={() => { this.setState({ durationMenuOpen: false }) }}\n                onOpen={() => { this.setState({ durationMenuOpen: true }) }}\n                value={this.state.duration}\n                onChange={(event) => { this.setState({ duration: event.target.value }) }}\n              >\n                <MenuItem value={0}>Undefined</MenuItem>\n                <MenuItem value={1}>1 Months</MenuItem>\n                <MenuItem value={2}>2 Months</MenuItem>\n                <MenuItem value={3}>3 Months</MenuItem>\n                <MenuItem value={4}>4 Months</MenuItem>\n                <MenuItem value={5}>5 Months</MenuItem>\n                <MenuItem value={6}>6 Months</MenuItem>\n              </Select>\n            </FormControl>\n\n            <br /><br />\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              required\n              label=\"Salary\"\n              onChange={(event) => { this.setState({ salary: event.target.value }) }}\n            />\n\n            <br /><br />\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={this.formSubmit}>\n              Post Job\n            </Button>\n\n          </form>\n        </div>\n\n      </Container>\n    )\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(R_CreateJob))","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_AcceptedApplicants.js",["130","131","132","133","134","135","136","137","138","139"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Dashboard.js",["140","141","142","143"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/styles.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/localStorage.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/misc.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Job.js",["144","145","146","147","148","149","150","151","152","153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":58,"column":19,"nodeType":"161","messageId":"162","endLine":58,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":2,"column":16,"nodeType":"165","messageId":"166","endLine":2,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":100,"column":47,"nodeType":"161","messageId":"162","endLine":100,"endColumn":49},{"ruleId":"159","severity":1,"message":"167","line":176,"column":82,"nodeType":"161","messageId":"162","endLine":176,"endColumn":84},{"ruleId":"159","severity":1,"message":"167","line":194,"column":73,"nodeType":"161","messageId":"162","endLine":194,"endColumn":75},{"ruleId":"159","severity":1,"message":"160","line":257,"column":52,"nodeType":"161","messageId":"162","endLine":257,"endColumn":54},{"ruleId":"159","severity":1,"message":"160","line":257,"column":82,"nodeType":"161","messageId":"162","endLine":257,"endColumn":84},{"ruleId":"159","severity":1,"message":"160","line":257,"column":110,"nodeType":"161","messageId":"162","endLine":257,"endColumn":112},{"ruleId":"159","severity":1,"message":"160","line":309,"column":63,"nodeType":"161","messageId":"162","endLine":309,"endColumn":65},{"ruleId":"159","severity":1,"message":"160","line":313,"column":42,"nodeType":"161","messageId":"162","endLine":313,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":13,"column":18,"nodeType":"161","messageId":"162","endLine":13,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":64,"column":56,"nodeType":"161","messageId":"162","endLine":64,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":65,"column":61,"nodeType":"161","messageId":"162","endLine":65,"endColumn":63},{"ruleId":"159","severity":1,"message":"160","line":75,"column":33,"nodeType":"161","messageId":"162","endLine":75,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":85,"column":38,"nodeType":"161","messageId":"162","endLine":85,"endColumn":40},{"ruleId":"159","severity":1,"message":"160","line":113,"column":73,"nodeType":"161","messageId":"162","endLine":113,"endColumn":75},{"ruleId":"159","severity":1,"message":"160","line":150,"column":85,"nodeType":"161","messageId":"162","endLine":150,"endColumn":87},{"ruleId":"159","severity":1,"message":"160","line":171,"column":83,"nodeType":"161","messageId":"162","endLine":171,"endColumn":85},{"ruleId":"163","severity":1,"message":"168","line":16,"column":42,"nodeType":"165","messageId":"166","endLine":16,"endColumn":51},{"ruleId":"169","severity":1,"message":"170","line":93,"column":26,"nodeType":"171","messageId":"172","endLine":93,"endColumn":34,"fix":"173"},{"ruleId":"159","severity":1,"message":"160","line":112,"column":62,"nodeType":"161","messageId":"162","endLine":112,"endColumn":64},{"ruleId":"159","severity":1,"message":"167","line":113,"column":64,"nodeType":"161","messageId":"162","endLine":113,"endColumn":66},{"ruleId":"159","severity":1,"message":"160","line":114,"column":65,"nodeType":"161","messageId":"162","endLine":114,"endColumn":67},{"ruleId":"159","severity":1,"message":"160","line":153,"column":53,"nodeType":"161","messageId":"162","endLine":153,"endColumn":55},{"ruleId":"159","severity":1,"message":"160","line":153,"column":86,"nodeType":"161","messageId":"162","endLine":153,"endColumn":88},{"ruleId":"159","severity":1,"message":"160","line":166,"column":41,"nodeType":"161","messageId":"162","endLine":166,"endColumn":43},{"ruleId":"159","severity":1,"message":"160","line":168,"column":46,"nodeType":"161","messageId":"162","endLine":168,"endColumn":48},{"ruleId":"159","severity":1,"message":"160","line":179,"column":27,"nodeType":"161","messageId":"162","endLine":179,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":182,"column":32,"nodeType":"161","messageId":"162","endLine":182,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":185,"column":32,"nodeType":"161","messageId":"162","endLine":185,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":205,"column":48,"nodeType":"161","messageId":"162","endLine":205,"endColumn":50},{"ruleId":"163","severity":1,"message":"174","line":16,"column":35,"nodeType":"165","messageId":"166","endLine":16,"endColumn":45},{"ruleId":"159","severity":1,"message":"160","line":57,"column":47,"nodeType":"161","messageId":"162","endLine":57,"endColumn":49},{"ruleId":"163","severity":1,"message":"175","line":93,"column":9,"nodeType":"165","messageId":"166","endLine":93,"endColumn":12},{"ruleId":"159","severity":1,"message":"167","line":152,"column":71,"nodeType":"161","messageId":"162","endLine":152,"endColumn":73},{"ruleId":"159","severity":1,"message":"160","line":187,"column":59,"nodeType":"161","messageId":"162","endLine":187,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":191,"column":38,"nodeType":"161","messageId":"162","endLine":191,"endColumn":40},{"ruleId":"159","severity":1,"message":"160","line":68,"column":67,"nodeType":"161","messageId":"162","endLine":68,"endColumn":69},{"ruleId":"159","severity":1,"message":"160","line":88,"column":38,"nodeType":"161","messageId":"162","endLine":88,"endColumn":40},{"ruleId":"159","severity":1,"message":"160","line":110,"column":62,"nodeType":"161","messageId":"162","endLine":110,"endColumn":64},{"ruleId":"159","severity":1,"message":"160","line":118,"column":44,"nodeType":"161","messageId":"162","endLine":118,"endColumn":46},{"ruleId":"159","severity":1,"message":"160","line":120,"column":54,"nodeType":"161","messageId":"162","endLine":120,"endColumn":56},{"ruleId":"159","severity":1,"message":"160","line":130,"column":27,"nodeType":"161","messageId":"162","endLine":130,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":134,"column":32,"nodeType":"161","messageId":"162","endLine":134,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":138,"column":32,"nodeType":"161","messageId":"162","endLine":138,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":153,"column":27,"nodeType":"161","messageId":"162","endLine":153,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":202,"column":38,"nodeType":"178","messageId":"179","endLine":202,"endColumn":40},{"ruleId":"163","severity":1,"message":"180","line":17,"column":30,"nodeType":"165","messageId":"166","endLine":17,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":103,"column":43,"nodeType":"161","messageId":"162","endLine":103,"endColumn":45},{"ruleId":"159","severity":1,"message":"167","line":182,"column":77,"nodeType":"161","messageId":"162","endLine":182,"endColumn":79},{"ruleId":"159","severity":1,"message":"160","line":186,"column":104,"nodeType":"161","messageId":"162","endLine":186,"endColumn":106},{"ruleId":"159","severity":1,"message":"160","line":54,"column":32,"nodeType":"161","messageId":"162","endLine":54,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":64,"column":37,"nodeType":"161","messageId":"162","endLine":64,"endColumn":39},{"ruleId":"163","severity":1,"message":"175","line":80,"column":9,"nodeType":"165","messageId":"166","endLine":80,"endColumn":12},{"ruleId":"159","severity":1,"message":"160","line":82,"column":16,"nodeType":"161","messageId":"162","endLine":82,"endColumn":18},{"ruleId":"159","severity":1,"message":"160","line":104,"column":58,"nodeType":"161","messageId":"162","endLine":104,"endColumn":60},{"ruleId":"159","severity":1,"message":"167","line":108,"column":67,"nodeType":"161","messageId":"162","endLine":108,"endColumn":69},{"ruleId":"159","severity":1,"message":"160","line":109,"column":59,"nodeType":"161","messageId":"162","endLine":109,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":117,"column":27,"nodeType":"161","messageId":"162","endLine":117,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":121,"column":32,"nodeType":"161","messageId":"162","endLine":121,"endColumn":34},{"ruleId":"159","severity":1,"message":"160","line":125,"column":32,"nodeType":"161","messageId":"162","endLine":125,"endColumn":34},{"ruleId":"176","severity":1,"message":"177","line":190,"column":38,"nodeType":"178","messageId":"179","endLine":190,"endColumn":40},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'Container' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"183","text":"184"},"'DeleteIcon' is defined but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Router' is defined but never used.","no-global-assign","no-unsafe-negation",[2318,2318],"()"]