[{"/home/shreyas/dev/ass1/2019113004/frontend/src/index.js":"1","/home/shreyas/dev/ass1/2019113004/frontend/src/App.js":"2","/home/shreyas/dev/ass1/2019113004/frontend/src/reportWebVitals.js":"3","/home/shreyas/dev/ass1/2019113004/frontend/src/components/Login.js":"4","/home/shreyas/dev/ass1/2019113004/frontend/src/components/Signup.js":"5","/home/shreyas/dev/ass1/2019113004/frontend/src/store/store.js":"6","/home/shreyas/dev/ass1/2019113004/frontend/src/store/actions.js":"7","/home/shreyas/dev/ass1/2019113004/frontend/src/store/reducer.js":"8","/home/shreyas/dev/ass1/2019113004/frontend/src/store/actionTypes.js":"9","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Profile.js":"10","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Profile.js":"11","/home/shreyas/dev/ass1/2019113004/frontend/src/components/Navbar.js":"12","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_MyApplications.js":"13","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Dashboard.js":"14","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_CreateJob.js":"15","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_AcceptedApplicants.js":"16","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Dashboard.js":"17","/home/shreyas/dev/ass1/2019113004/frontend/src/components/styles.js":"18","/home/shreyas/dev/ass1/2019113004/frontend/src/store/localStorage.js":"19","/home/shreyas/dev/ass1/2019113004/frontend/src/misc.js":"20","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Job.js":"21","/home/shreyas/dev/2019113004/frontend/src/index.js":"22","/home/shreyas/dev/2019113004/frontend/src/App.js":"23","/home/shreyas/dev/2019113004/frontend/src/reportWebVitals.js":"24","/home/shreyas/dev/2019113004/frontend/src/components/Signup.js":"25","/home/shreyas/dev/2019113004/frontend/src/components/A_MyApplications.js":"26","/home/shreyas/dev/2019113004/frontend/src/components/R_Dashboard.js":"27","/home/shreyas/dev/2019113004/frontend/src/components/R_Profile.js":"28","/home/shreyas/dev/2019113004/frontend/src/components/R_AcceptedApplicants.js":"29","/home/shreyas/dev/2019113004/frontend/src/components/A_Dashboard.js":"30","/home/shreyas/dev/2019113004/frontend/src/components/R_Job.js":"31","/home/shreyas/dev/2019113004/frontend/src/components/A_Profile.js":"32","/home/shreyas/dev/2019113004/frontend/src/components/R_CreateJob.js":"33","/home/shreyas/dev/2019113004/frontend/src/components/Login.js":"34","/home/shreyas/dev/2019113004/frontend/src/store/store.js":"35","/home/shreyas/dev/2019113004/frontend/src/misc.js":"36","/home/shreyas/dev/2019113004/frontend/src/components/styles.js":"37","/home/shreyas/dev/2019113004/frontend/src/store/actions.js":"38","/home/shreyas/dev/2019113004/frontend/src/components/Navbar.js":"39","/home/shreyas/dev/2019113004/frontend/src/store/localStorage.js":"40","/home/shreyas/dev/2019113004/frontend/src/store/reducer.js":"41","/home/shreyas/dev/2019113004/frontend/src/store/actionTypes.js":"42"},{"size":478,"mtime":1610627350539,"results":"43","hashOfConfig":"44"},{"size":1511,"mtime":1611081410252,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1610583457261,"results":"46","hashOfConfig":"44"},{"size":3931,"mtime":1611344826487,"results":"47","hashOfConfig":"44"},{"size":4603,"mtime":1611413247144,"results":"48","hashOfConfig":"44"},{"size":536,"mtime":1611404656710,"results":"49","hashOfConfig":"44"},{"size":3144,"mtime":1611407046594,"results":"50","hashOfConfig":"44"},{"size":864,"mtime":1611307038953,"results":"51","hashOfConfig":"44"},{"size":330,"mtime":1611306947330,"results":"52","hashOfConfig":"44"},{"size":11716,"mtime":1611344792938,"results":"53","hashOfConfig":"44"},{"size":3960,"mtime":1611344160029,"results":"54","hashOfConfig":"44"},{"size":2786,"mtime":1611344842818,"results":"55","hashOfConfig":"44"},{"size":5014,"mtime":1611412344069,"results":"56","hashOfConfig":"44"},{"size":14069,"mtime":1611413546141,"results":"57","hashOfConfig":"44"},{"size":9038,"mtime":1611344995903,"results":"58","hashOfConfig":"44"},{"size":7584,"mtime":1611412064798,"results":"59","hashOfConfig":"44"},{"size":6653,"mtime":1611411969102,"results":"60","hashOfConfig":"44"},{"size":816,"mtime":1611325415590,"results":"61","hashOfConfig":"44"},{"size":414,"mtime":1611305743013,"results":"62","hashOfConfig":"44"},{"size":1098,"mtime":1611255665402,"results":"63","hashOfConfig":"44"},{"size":7994,"mtime":1611412013489,"results":"64","hashOfConfig":"44"},{"size":478,"mtime":1611413850000,"results":"65","hashOfConfig":"66"},{"size":1511,"mtime":1611413850000,"results":"67","hashOfConfig":"66"},{"size":362,"mtime":1611413850000,"results":"68","hashOfConfig":"66"},{"size":4603,"mtime":1611413850000,"results":"69","hashOfConfig":"66"},{"size":5016,"mtime":1611667438827,"results":"70","hashOfConfig":"66"},{"size":6663,"mtime":1611667409381,"results":"71","hashOfConfig":"66"},{"size":3960,"mtime":1611413850000,"results":"72","hashOfConfig":"66"},{"size":7584,"mtime":1611413850000,"results":"73","hashOfConfig":"66"},{"size":14061,"mtime":1611667393271,"results":"74","hashOfConfig":"66"},{"size":7994,"mtime":1611413850000,"results":"75","hashOfConfig":"66"},{"size":11716,"mtime":1611413850000,"results":"76","hashOfConfig":"66"},{"size":9061,"mtime":1611667481163,"results":"77","hashOfConfig":"66"},{"size":3931,"mtime":1611413850000,"results":"78","hashOfConfig":"66"},{"size":449,"mtime":1611413850000,"results":"79","hashOfConfig":"66"},{"size":1307,"mtime":1611665115492,"results":"80","hashOfConfig":"66"},{"size":816,"mtime":1611413850000,"results":"81","hashOfConfig":"66"},{"size":3144,"mtime":1611413850000,"results":"82","hashOfConfig":"66"},{"size":2786,"mtime":1611413850000,"results":"83","hashOfConfig":"66"},{"size":414,"mtime":1611667562969,"results":"84","hashOfConfig":"66"},{"size":864,"mtime":1611413850000,"results":"85","hashOfConfig":"66"},{"size":330,"mtime":1611413850000,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"xdrnbf",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1bt8wl6",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"/home/shreyas/dev/ass1/2019113004/frontend/src/index.js",[],["181","182"],"/home/shreyas/dev/ass1/2019113004/frontend/src/App.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/reportWebVitals.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/Login.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/Signup.js",["183"],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/store.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/actions.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/reducer.js",["184"],"import * as actionTypes from './actionTypes'\nimport { v1 as uuid } from 'uuid'\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n\n    case actionTypes.CREATE_USER:\n      return {\n        ...state,\n        user: action.payload.user\n      }\n\n    case actionTypes.LOGIN:\n    case actionTypes.GET_APPLICANT:\n      return {\n        ...state,\n        user: action.payload.user\n      }\n\n    case actionTypes.EDIT_RECRUITER:\n    case actionTypes.EDIT_APPLICANT:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload.user }\n      }\n\n    case actionTypes.GET_APPLICANTS:\n      return {\n        ...state,\n        applicants: action.payload.applicants\n      }\n\n    case actionTypes.GET_JOBS:\n      return {\n        ...state,\n        jobs: action.payload.jobs\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","/home/shreyas/dev/ass1/2019113004/frontend/src/store/actionTypes.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Profile.js",["185","186","187","188","189","190","191","192"],"import '../App.css'\nimport Navbar from './Navbar'\nimport * as misc from '../misc'\n\nimport React, { Component } from 'react'\nimport { Alert, Container, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap'\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Rating } from '@material-ui/lab';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Button, ButtonGroup, CssBaseline, TextField, Grid, Box } from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass A_Profile extends Component {\n\n  state = { type: \"applicant\" }\n\n  async componentDidMount() {\n    await this.props.getApplicant(this.state._id)\n    this.setState({ componentLoaded: true })\n  }\n\n  constructor(props) {\n    super(props)\n\n    try {\n      this.state._id = this.props.state.user._id\n      this.state.email = this.props.state.user.email\n      this.state.name = this.props.state.user.name\n      this.state.education = this.props.state.user.education\n      this.state.skills = this.props.state.user.skills\n\n      if (!this.state.education) { this.state.education = [] }\n      if (!this.state.skills) { this.state.skills = [] }\n\n      this.state.modal = false\n      this.state.skillModal = false\n\n      this.state.institute = \"\"\n      this.state.startYear = 0\n      this.state.endYear = 0\n\n      this.state.skill = \"\"\n\n      this.state.componentLoaded = false\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  calcRating = (ratings) => {\n    let total = 0\n    for (let i = 0; i < ratings.length; i++) {\n      let item = ratings[i]\n      total = total + item.rating / ratings.length\n    }\n    return total\n  }\n\n  formSubmit = async () => {\n\n    if (!misc.required([this.state.name, this.state.email, this.state.education, this.state.skills])\n      || !misc.validate([misc.verifyEmail], [this.state.email])) {\n      alert(\"Enter Valid Details\")\n      return\n    }\n\n    let user = {\n      type: \"applicant\",\n      name: this.state.name,\n      email: this.state.email,\n      education: this.state.education,\n      skills: this.state.skills\n    }\n\n    await this.props.editApplicant(user)\n\n    this.props.history.push(\"/a/dashboard\")\n  }\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  skillToggle = () => {\n    this.setState({ skillModal: !this.state.skillModal })\n  }\n\n  selectSkill = (event) => {\n    if (this.state.skills.filter(item => item == event.target.innerText.toLowerCase()).length) {\n      alert(\"Skill already exists\")\n      return\n    }\n    this.setState({\n      skills: [...this.state.skills, event.target.innerText.toLowerCase()]\n    })\n  }\n\n  render() {\n    if (!this.state.componentLoaded) { return <div></div> }\n\n    let ratings, rating\n\n    try {\n\n      ratings = this.props.state.user.ratings\n      if (!ratings) { ratings = [] }\n\n      rating = this.calcRating(ratings)\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n\n    const { classes } = this.props\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Navbar page={\"Profile\"} type={\"applicant\"} />\n\n        <CssBaseline />\n        <div className={classes.paper}>\n\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating name=\"read-only\" value={rating} readOnly />\n          </Box>\n\n\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n\n              <Grid item xs={6}>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"name\"\n                  id=\"name\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Name\"\n                  autoFocuss\n                  value={this.state.name}\n                  onChange={(event) => { this.setState({ name: event.target.value }) }}\n                />\n              </Grid>\n\n              <Grid item xs={6}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  autoComplete=\"email\"\n                  value={this.state.email}\n                  onChange={(event) => { this.setState({ email: event.target.value }) }}\n                />\n              </Grid>\n\n              <Grid container spacing={2}>\n                {this.state.education?.length ? (<Container><br /><Alert style={{ textAlign: \"center\" }} color=\"light\"><h5 >Education</h5></Alert></Container>) : (<div></div>)}\n                {this.state.education?.map(({ id, institute, startYear, endYear }) => (\n                  <Grid item>\n                    <Alert color=\"dark\" toggle={() => {\n                      this.setState({\n                        education: this.state.education.filter((item) => item.id != id)\n                      })\n                    }}>\n                      {institute} ({startYear} - {endYear})\n                  </Alert>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <br /><br />\n\n              <Grid container spacing={2}>\n                {this.state.skills?.length ? (<Container><br /><Alert style={{ textAlign: \"center\" }} color=\"light\"><h5>Skills</h5></Alert></Container>) : (<div></div>)}\n\n                {this.state.skills?.map((skill) => (\n                  <Grid item>\n                    <Alert color=\"dark\" toggle={() => {\n                      this.setState({\n                        skills: this.state.skills.filter((item) => item != skill)\n                      })\n                    }}>\n                      {skill}\n                    </Alert>\n                  </Grid>\n                ))}\n              </Grid>\n\n              <Modal isOpen={this.state.skillModal} toggle={this.skillToggle}>\n                <ModalHeader toggle={this.skillToggle}>Select Skill</ModalHeader>\n                <ModalBody>\n                  <Container>\n                    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                      <Button onClick={this.selectSkill}>C++</Button>\n                      <Button onClick={this.selectSkill}>C</Button>\n                      <Button onClick={this.selectSkill}>python</Button>\n                      <Button onClick={this.selectSkill}>javascript</Button>\n                      <Button onClick={this.selectSkill}>ruby</Button>\n                      <Button onClick={this.selectSkill}>HTML</Button>\n                      <Button onClick={this.selectSkill}>CSS</Button>\n                    </ButtonGroup>\n                  </Container>\n                </ModalBody>\n              </Modal>\n\n              <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>Enter education details</ModalHeader>\n                <ModalBody>\n                  <Form>\n                    <FormGroup>\n\n                      <Box m=\"1rem\">\n                        <Label for=\"institute\">Institute</Label>\n                        <Input\n                          type=\"text\"\n                          id=\"institute\"\n                          placeholder=\"Institute Name\"\n                          onChange={(event) => { this.setState({ institute: event.target.value }) }}\n                        />\n                      </Box>\n\n                      <Box m=\"1rem\">\n                        <Label for=\"startYear\">Start Year</Label>\n                        <Input\n                          type=\"number\"\n                          id=\"startYear\"\n                          placeholder=\"Start Year\"\n                          onChange={(event) => { this.setState({ startYear: event.target.value }) }}\n                        />\n                      </Box>\n\n                      <Box m=\"1rem\">\n                        <Label for=\"endYear\">End Year</Label>\n                        <Input\n                          type=\"number\"\n                          id=\"endYear\"\n                          placeholder=\"End Year\"\n                          onChange={(event) => { this.setState({ endYear: event.target.value }) }}\n                        />\n                      </Box>\n                      <Button\n                        onClick={() => {\n                          if (this.state.institute == \"\" || this.state.startYear == \"\" || this.state.endYear == \"\") {\n                            alert(\"Enter all required details\")\n                            return\n                          }\n                          this.setState({\n                            education: [...this.state.education, {\n                              id: `${this.state.institute}${this.state.startYear}${this.state.startYear}`,\n                              institute: this.state.institute,\n                              startYear: this.state.startYear,\n                              endYear: this.state.endYear\n                            }]\n                          })\n                          this.toggle()\n                        }}\n                      >Save\n                      </Button>\n\n                    </FormGroup>\n                  </Form>\n                </ModalBody>\n              </Modal>\n\n            </Grid>\n\n            <br />\n\n            <div style={{ display: 'flex', justifyContent: \"center\" }}>\n\n              <div style={{ margin: \"1rem\" }}>\n                <TextField\n                  className={classes.submit}\n                  variant=\"outlined\"\n                  label=\"skill\"\n                  value={this.state.skill}\n                  onChange={(event) => { this.setState({ skill: event.target.value }) }}\n                />\n                <Button\n                  className={classes.submit}\n                  style={{ marginRight: \"3rem\" }}\n                  variant=\"outlined\"\n                  onClick={() => {\n                    this.setState({\n                      skillModal: true\n                    })\n                  }}>\n                  <ArrowDropDown />\n                </Button>\n\n                <Button\n                  style={{ maxHeight: \"2rem\", marginRight: \"10%\" }}\n                  variant=\"contained\"\n                  onClick={() => {\n                    if (this.state.skills.filter(item => item == this.state.skill).length) {\n                      alert(\"Skill already exists\")\n                      return\n                    }\n                    if (this.state.skill == \"\") {\n                      alert(\"Enter a skill\")\n                      return\n                    }\n                    this.setState({\n                      skills: [...this.state.skills, this.state.skill],\n                      skill: \"\"\n                    })\n                  }}>\n                  Add Skill\n              </Button>\n              </div>\n\n\n\n\n\n\n              <div>\n                <Button\n                  variant=\"contained\"\n                  onClick={this.toggle}\n                  className={classes.submit}\n                >\n                  Add Education\n            </Button>\n\n                <Button\n                  style={{ marginLeft: \"2rem\" }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={() => { this.formSubmit() }}>\n                  Save Changes\n            </Button>\n              </div>\n\n            </div>\n\n\n          </form>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(A_Profile))","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Profile.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/Navbar.js",["193"],"import '../App.css'\n\nimport React, { Component } from 'react'\nimport { Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText } from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Link as RouterLink } from 'react-router-dom'\n\nfunction Links(props) {\n  if (props.type == \"applicant\") {\n    return (\n      <Container>\n        <NavItem>\n          <RouterLink to=\"/a/dashboard\"><NavLink>Dashboard</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/a/applications\"><NavLink>My Applications</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/a/profile\"><NavLink>Profile</NavLink></RouterLink>\n        </NavItem>\n      </Container>\n    )\n  }\n  else {\n    return (\n      <Container>\n        <NavItem>\n          <RouterLink to=\"/r/dashboard\"><NavLink>Dashboard</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/r/createjob\"><NavLink>Create Job</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/r/accepted\"><NavLink>Accepted Applicants</NavLink></RouterLink>\n        </NavItem>\n        <NavItem>\n          <RouterLink to=\"/r/profile\"><NavLink>Profile</NavLink></RouterLink>\n        </NavItem>\n      </Container>\n    )\n  }\n}\n\nclass FixedNavbar extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n      name: \"\"\n    }\n    try {\n      this.state.name = this.props.state.user.name\n    } catch { }\n  }\n\n  toggle = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render() {\n    return (\n      <div>\n\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>{this.props.page}</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n\n              <Links type={this.props.type} />\n\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Not you?\n                                </DropdownToggle>\n\n                <DropdownMenu right>\n                  <RouterLink to=\"/\">\n                    <DropdownItem>\n                      Logout\n                                    </DropdownItem>\n                  </RouterLink>\n                </DropdownMenu>\n\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>{this.state.name}</NavbarText>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(FixedNavbar)","/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_MyApplications.js",["194","195","196","197","198","199","200"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/A_Dashboard.js",["201","202","203","204","205","206","207","208","209","210","211","212","213"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_CreateJob.js",["214","215","216","217","218","219"],"import '../App.css'\nimport Navbar from './Navbar'\nimport * as misc from '../misc'\n\nimport React, { Component } from 'react'\nimport { Alert, Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nimport DatePicker from 'react-date-picker'\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container, Button, ButtonGroup, Select, FormControl, MenuItem, InputLabel, CssBaseline, TextField, Grid } from '@material-ui/core';\nimport { ArrowDropDown, Delete as DeleteIcon } from '@material-ui/icons'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass R_CreateJob extends Component {\n\n  state = {\n    title: \"\",\n    maxApplications: null,\n    maxPositions: null,\n    deadline: null,\n    skills: [],\n    jobType: \"\",\n    duration: null,\n    salary: null,\n\n    skillModal: false,\n    skill: \"\",\n    menuOpen: false,\n    durationMenuOpen: false\n  }\n\n  constructor(props) {\n    super(props)\n\n    try {\n      this.state._id = this.props.state.user._id\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  skillToggle = () => {\n    this.setState({ skillModal: !this.state.skillModal })\n  }\n\n  selectSkill = (event) => {\n    if (this.state.skills.filter(item => item == event.target.innerText.toLowerCase()).length) {\n      alert(\"Skill already exists\")\n      return\n    }\n    this.setState({\n      skills: [...this.state.skills, event.target.innerText.toLowerCase()]\n    })\n  }\n\n  formSubmit = async () => {\n\n    if (!misc.required([this.state.title, this.state.maxApplications, this.state.maxPositions,\n    this.state.deadline, this.state.skills, this.state.jobType, this.state.duration, this.state.salary])) {\n      alert(\"Please sumbit all required details.\")\n      return\n    }\n\n    if (!misc.validate([misc.verifyNumber, misc.verifyNumber, misc.verifyNumber],\n      [this.state.maxApplications, this.state.maxPositions, this.state.salary])) {\n      alert(\"Please submit valid details\")\n      return\n    }\n\n    let job = {\n      r_id: this.state._id,\n      title: this.state.title,\n      email: this.props.state.user.email,\n      name: this.props.state.user.name,\n      maxApplications: this.state.maxApplications,\n      maxPositions: this.state.maxPositions,\n      deadline: this.state.deadline,\n      skills: this.state.skills,\n      jobType: this.state.jobType,\n      duration: this.state.duration,\n      salary: this.state.salary\n    }\n    let res = await this.props.createJob(job)\n    this.props.history.push(\"/r/dashboard\")\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Container>\n        <Navbar page={\"Create Job\"} type={\"recruiter\"} />\n        <CssBaseline />\n\n        <div className={classes.paper}>\n          <form className={classes.form} noValidate>\n\n            <TextField\n              type=\"text\"\n              variant=\"outlined\"\n              required\n              label=\"Title\"\n              onChange={(event) => { this.setState({ title: event.target.value }) }}\n            />\n\n            <br /><br />\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              required\n              label=\"Maximum Applicants\"\n              onChange={(event) => { this.setState({ maxApplications: event.target.value }) }}\n            />\n\n            {\" \"}\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              required\n              label=\"Maximum Positions\"\n              onChange={(event) => { this.setState({ maxPositions: event.target.value }) }}\n            />\n\n            <br /><br />\n\n            <DatePicker\n              format=\"dd-MM-y\"\n              value={this.state.deadline}\n              onChange={(value) => { this.setState({ deadline: value }) }}\n            />\n\n            <br /><br />\n\n            <Grid container spacing={2}>\n              {this.state.skills?.length ? (<Container><br /><Alert style={{ textAlign: \"center\" }} color=\"dark\"><h5>Skills</h5></Alert></Container>) : (<div></div>)}\n\n              {this.state.skills?.map((skill) => (\n                <Grid item>\n                  <Alert color=\"light\" toggle={() => {\n                    this.setState({\n                      skills: this.state.skills.filter((item) => item != skill)\n                    })\n                  }}>\n                    <span style={{ color: \"black\" }}>{skill}</span>\n                  </Alert>\n                </Grid>\n              ))}\n            </Grid>\n\n            <Modal isOpen={this.state.skillModal} toggle={this.skillToggle}>\n              <ModalHeader toggle={this.skillToggle}>Select Skill</ModalHeader>\n              <ModalBody>\n                <Container>\n                  <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                    <Button onClick={this.selectSkill}>C++</Button>\n                    <Button onClick={this.selectSkill}>C</Button>\n                    <Button onClick={this.selectSkill}>python</Button>\n                    <Button onClick={this.selectSkill}>javascript</Button>\n                    <Button onClick={this.selectSkill}>ruby</Button>\n                    <Button onClick={this.selectSkill}>HTML</Button>\n                    <Button onClick={this.selectSkill}>CSS</Button>\n                  </ButtonGroup>\n                </Container>\n              </ModalBody>\n            </Modal>\n            <TextField\n              variant=\"outlined\"\n              label=\"skill\"\n              value={this.state.skill}\n              onChange={(event) => { this.setState({ skill: event.target.value }) }}\n            />\n            <br />\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                if (this.state.skills.filter(item => item == this.state.skill).length) {\n                  alert(\"Skill already exists\")\n                  return\n                }\n                if (this.state.skill == \"\") {\n                  alert(\"Enter a skill\")\n                  return\n                }\n                this.setState({\n                  skills: [...this.state.skills, this.state.skill],\n                  skill: \"\"\n                })\n              }}>\n              Add Skill\n              </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={() => {\n                this.setState({\n                  skillModal: true\n                })\n              }}>\n              Select a skill <ArrowDropDown />\n            </Button>\n\n            <br /><br />\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"job-label\">Job Type</InputLabel>\n              <Select\n                labelId=\"job-label\"\n                open={this.state.menuOpen}\n                onClose={() => { this.setState({ menuOpen: false }) }}\n                onOpen={() => { this.setState({ menuOpen: true }) }}\n                value={this.state.jobType}\n                onChange={(event) => { this.setState({ jobType: event.target.value }) }}\n              >\n                <MenuItem value=\"Full-Time\">Full-Time</MenuItem>\n                <MenuItem value=\"Part-Time\">Part-Time</MenuItem>\n                <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"duration-label\">Duration</InputLabel>\n              <Select\n                labelId=\"duration-label\"\n                open={this.state.durationMenuOpen}\n                onClose={() => { this.setState({ durationMenuOpen: false }) }}\n                onOpen={() => { this.setState({ durationMenuOpen: true }) }}\n                value={this.state.duration}\n                onChange={(event) => { this.setState({ duration: event.target.value }) }}\n              >\n                <MenuItem value={0}>Undefined</MenuItem>\n                <MenuItem value={1}>1 Months</MenuItem>\n                <MenuItem value={2}>2 Months</MenuItem>\n                <MenuItem value={3}>3 Months</MenuItem>\n                <MenuItem value={4}>4 Months</MenuItem>\n                <MenuItem value={5}>5 Months</MenuItem>\n                <MenuItem value={6}>6 Months</MenuItem>\n              </Select>\n            </FormControl>\n\n            <br /><br />\n\n            <TextField\n              type=\"number\"\n              variant=\"outlined\"\n              required\n              label=\"Salary\"\n              onChange={(event) => { this.setState({ salary: event.target.value }) }}\n            />\n\n            <br /><br />\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={this.formSubmit}>\n              Post Job\n            </Button>\n\n          </form>\n        </div>\n\n      </Container>\n    )\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(R_CreateJob))","/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_AcceptedApplicants.js",["220","221","222","223","224","225","226","227","228","229"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Dashboard.js",["230","231","232","233"],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/styles.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/store/localStorage.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/misc.js",[],"/home/shreyas/dev/ass1/2019113004/frontend/src/components/R_Job.js",["234","235","236","237","238","239","240","241","242","243","244"],"/home/shreyas/dev/2019113004/frontend/src/index.js",[],["245","246"],"/home/shreyas/dev/2019113004/frontend/src/App.js",[],"/home/shreyas/dev/2019113004/frontend/src/reportWebVitals.js",[],"/home/shreyas/dev/2019113004/frontend/src/components/Signup.js",["247"],"import '../App.css'\nimport * as misc from '../misc'\n\nimport React, { Component } from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Avatar, Button, CssBaseline, TextField, Link, Grid, Typography, Container } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass Signup extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      type: \"applicant\"\n    }\n  }\n\n  formSubmit = async () => {\n\n    if (!misc.required([this.state.name, this.state.email, this.state.password])) {\n      alert(\"Please enter all required details\")\n      return\n    }\n\n    if (!misc.verifyEmail(this.state.email)) {\n      alert(\"Invalid email\")\n      return\n    }\n\n    let user = {\n      type: this.state.type,\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    let res = await this.props.createUser(user)\n    if (!res.data.success) {\n      alert(res.data.message)\n      return\n    }\n\n    if (user.type == 'applicant') {\n      this.props.history.push(\"/a/profile\")\n    }\n    else {\n      this.props.history.push(\"/r/profile\")\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n                    </Typography>\n\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"name\"\n                  id=\"name\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Name\"\n                  autoFocus\n                  onChange={(event) => { this.setState({ name: event.target.value }) }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  autoComplete=\"email\"\n                  onChange={(event) => { this.setState({ email: event.target.value }) }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(event) => { this.setState({ password: event.target.value }) }}\n                />\n              </Grid>\n\n\n\n              <Grid item xs={12}>\n                <Dropdown\n                  onSelect={event => { this.setState({ type: event }) }}\n                >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Account Type: {this.state.type}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"applicant\">Applicant</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"recruiter\">Recruiter</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Grid>\n            </Grid>\n\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => { this.formSubmit() }}>\n              Sign Up\n            </Button>\n\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <RouterLink to=\"/\">\n                  <Link variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </RouterLink>\n              </Grid>\n            </Grid>\n\n\n          </form>\n        </div>\n      </Container >\n    );\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(Signup))\n","/home/shreyas/dev/2019113004/frontend/src/components/A_MyApplications.js",["248","249","250","251","252","253","254"],"/home/shreyas/dev/2019113004/frontend/src/components/R_Dashboard.js",["255","256","257","258"],"/home/shreyas/dev/2019113004/frontend/src/components/R_Profile.js",[],"/home/shreyas/dev/2019113004/frontend/src/components/R_AcceptedApplicants.js",["259","260","261","262","263","264","265","266","267","268"],"import '../App.css'\nimport Navbar from './Navbar'\n\nimport React, { Component } from 'react'\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Rating } from '@material-ui/lab';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Card, CardContent, CardActions, Button, Select, FormControl, MenuItem, InputLabel, TextField, Grid, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass R_AcceptedApplicants extends Component {\n\n  state = {}\n\n  constructor(props) {\n    super(props)\n\n    try {\n      this.state._id = this.props.state.user._id\n\n      this.state.sortOpen = false\n      this.state.orderOpen = false\n      this.state.sort = 0\n      this.state.asc = 1\n\n      this.state.rating = -1\n\n      this.state.componentLoaded = false\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  async componentDidMount() {\n    await this.props.getJobs()\n    await this.props.getApplicants()\n\n    this.setState({ componentLoaded: true })\n  }\n\n  submitRating = async (app) => {\n    if (this.state.rating >= 0 && this.state.rating <= 5) {\n      let rating = {\n        _id: this.state._id,\n        rating: this.state.rating\n      }\n      let res = await this.props.rateApplicant(rating, app.user._id)\n      if (res.data.success) {\n        this.props.getApplicants()\n      }\n    }\n    else {\n      alert(\"Enter a rating between 0 and 5\")\n    }\n  }\n\n  RateApp = ({ app }) => {\n    let recruiterRating = app.user.ratings?.find(item => item._id == app.job.r_id)\n\n    if (recruiterRating) {\n      return (\n        <Typography gutterBottom>\n          You rated: {recruiterRating.rating}\n        </Typography>\n      )\n    }\n\n    else {\n      return (\n        < CardActions >\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Rate Employee (0-5)\"\n            onChange={(event) => {\n              if (event.target.value == \"\") { this.setState({ rating: -1 }) }\n              else { this.setState({ rating: event.target.value }) }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            onClick={() => { this.submitRating(app) }}\n          >\n            Rate\n          </Button>\n        </CardActions >\n      )\n    }\n  }\n\n  render() {\n    if (!this.state.componentLoaded) { return <div></div> }\n\n    const { classes } = this.props\n    let jobs, applicants, job_applicants\n\n    try {\n      jobs = this.props.state.jobs?.filter(item => item.r_id == this.state._id)\n\n      applicants = this.props.state.applicants\n\n      job_applicants = []\n\n      for (let i = 0; i < jobs.length; i++) {\n        for (let j = 0; j < jobs[i].applicants.length; j++) {\n          if (jobs[i].applicants[j].status == 3) {\n            let obj = {\n              user: applicants.find(item => item._id == jobs[i].applicants[j]._id),\n              application: jobs[i].applicants[j],\n              job: jobs[i]\n            }\n            job_applicants.push(obj)\n          }\n        }\n      }\n\n\n      if (this.state.sort == 1) { // Name\n        job_applicants?.sort((app1, app2) => this.state.asc * (app1.user.name.toLowerCase().localeCompare(app2.user.name.toLowerCase())))\n      }\n\n      else if (this.state.sort == 2) { // Date\n        job_applicants?.sort((app1, app2) => this.state.asc * ((new Date(app1.application.joiningDate)) - (new Date(app2.application.joiningDate))))\n      }\n\n      else if (this.state.sort == 3) { // Rating\n        job_applicants?.sort((app1, app2) => {\n          let rating1 = app1.user.ratings.length ?\n            app1.user.ratings.map(user => user.rating)\n              .reduce((accumulator, currentValue) => accumulator + currentValue)\n            : 0\n          let rating2 = app2.user.ratings.length ?\n            app2.user.ratings.map(user => user.rating)\n              .reduce((accumulator, currentValue) => accumulator + currentValue)\n            : 0\n\n          return this.state.asc * (rating1 - rating2)\n        })\n      }\n\n      if (this.state.sort == 4) { // Name\n        job_applicants?.sort((app1, app2) => this.state.asc * (app1.job.title.toLowerCase().localeCompare(app2.job.title.toLowerCase())))\n      }\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n    return (\n      <div>\n        <Navbar page={\"Accepted Applicants\"} type={\"recruiter\"} />\n\n        <Card raised>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"sort-label\">Sort</InputLabel>\n            <Select\n              labelId=\"sort-label\"\n              open={this.state.sortOpen}\n              onClose={() => { this.setState({ sortOpen: false }) }}\n              onOpen={() => { this.setState({ sortOpen: true }) }}\n              value={this.state.sort}\n              onChange={(event) => { this.setState({ sort: event.target.value }) }}\n            >\n              <MenuItem value={1}>Name</MenuItem>\n              <MenuItem value={2}>Joining date</MenuItem>\n              <MenuItem value={3}>Rating</MenuItem>\n              <MenuItem value={4}>Title</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"order-label\">Order</InputLabel>\n            <Select\n              labelId=\"order-label\"\n              open={this.state.orderOpen}\n              onClose={() => { this.setState({ orderOpen: false }) }}\n              onOpen={() => { this.setState({ orderOpen: true }) }}\n              value={this.state.asc}\n              onChange={(event) => { this.setState({ asc: event.target.value }) }}\n            >\n              <MenuItem value={1}>Ascending</MenuItem>\n              <MenuItem value={-1}>Descending</MenuItem>\n            </Select>\n          </FormControl>\n        </Card>\n\n        <br /><br />\n\n        <Grid container className={classes.root} spacing={4}>\n\n          {job_applicants?.map((app) => {\n            if (app) {\n              return (\n                <Grid key={`${app.user._id}${app.job._id}`} item>\n                  <Card className={classes.root}>\n                    <CardContent>\n\n                      <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                        {app.user.name}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Job: {app.job.title}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Type: {app.job.jobType}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Joining date: {(new Date(app.application.joiningDate)).toDateString()}\n                      </Typography>\n\n                      <Rating value={\n                        app.user.ratings.length ?\n                          app.user.ratings.map(item => item.rating)\n                            .reduce((accumulator, currentValue) => accumulator + currentValue) / app.user.ratings.length\n                          : 0}\n                        readOnly />\n\n                    </CardContent>\n\n                    <CardActions>\n                      <this.RateApp app={app} />\n                    </CardActions>\n\n                  </Card>\n                </Grid>\n              )\n            }\n          }\n          )}\n\n        </Grid>\n      </div >\n    )\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(R_AcceptedApplicants))","/home/shreyas/dev/2019113004/frontend/src/components/A_Dashboard.js",["269","270","271","272","273","274","275","276","277","278","279","280","281"],"/home/shreyas/dev/2019113004/frontend/src/components/R_Job.js",["282","283","284","285","286","287","288","289","290","291","292"],"import '../App.css'\nimport Navbar from './Navbar'\nimport * as misc from '../misc'\n\nimport React, { Component } from 'react'\n\nimport * as actions from '../store/actions'\nimport { connect } from 'react-redux'\n\nimport { Rating } from '@material-ui/lab';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { CircularProgress, Card, CardContent, CardActions, Container, Button, Select, FormControl, MenuItem, InputLabel, Grid, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { useGlobalStyles } from './styles'\n\nconst useStyles = useGlobalStyles\n\nclass R_Job extends Component {\n\n  state = {}\n\n  constructor(props) {\n    super(props)\n\n    try {\n      this.state._id = this.props.state.user._id\n      this.state.job_id = this.props.match.params.id\n\n      this.state.sortOpen = false\n      this.state.orderOpen = false\n      this.state.sort = 0\n      this.state.asc = 1\n\n      this.state.isLoading = false\n\n      this.state.componentLoaded = false\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n  }\n\n  async componentDidMount() {\n    await this.props.getJobs()\n    await this.props.getApplicants()\n\n    this.setState({ componentLoaded: true })\n  }\n\n  acceptShortlistButton = ({ app }) => {\n    if (app.application.status == 1) {\n      return (\n        <Button\n          variant=\"contained\"\n          onClick={() => { this.changeApplication(app, 2) }}\n        >\n          Shortlist\n        </Button>\n      )\n    }\n    else if (app.application.status == 2) {\n      return (\n        <Button\n          variant=\"contained\"\n          onClick={() => { app.application.joiningDate = new Date(); this.changeApplication(app, 3) }}\n        >\n          Accept\n        </Button>\n      )\n    }\n    else { return \"\" }\n  }\n\n  changeApplication = async (app, status) => {\n    this.setState({ isLoading: true })\n    app.application.status = status\n    let res = await this.props.editApplication(app.application, this.state.job_id)\n\n    if (status == 3) {\n      await this.props.rejectAll(app.application._id, this.state.job_id)\n      await this.props.sendEmail({\n        name: app.user.name,\n        title: app.job.title,\n        email: app.user.email,\n        recruiter: app.job.name\n      })\n      console.log(\"Email sent to\", app.user.email)\n    }\n\n    await this.props.getJobs()\n    this.setState({ isLoading: false })\n  }\n\n  render() {\n    if (!this.state.componentLoaded) { return <div></div> }\n\n    const { classes } = this.props\n    let job, applicants, job_applicants\n\n    try {\n      job = this.props.state.jobs?.find(item => item._id == this.state.job_id)\n\n      applicants = this.props.state.applicants\n\n      job_applicants = job.applicants?.filter(user => user.status != 4).map(item => {\n        let applicant = applicants?.find(user => user._id == item._id)\n        return ({\n          application: item,\n          user: applicant,\n          job: job\n        })\n      })\n\n      if (this.state.sort == 1) { // Name\n        job_applicants?.sort((app1, app2) => this.state.asc * (app1.user.name.toLowerCase().localeCompare(app2.user.name.toLowerCase())))\n      }\n\n      else if (this.state.sort == 2) { // Date\n        job_applicants?.sort((app1, app2) => this.state.asc * ((new Date(app1.application.applicationDate)) - (new Date(app2.application.applicationDate))))\n      }\n\n      else if (this.state.sort == 3) { // Rating\n        job_applicants?.sort((app1, app2) => {\n          let rating1 = app1.user.ratings.length ?\n            app1.user.ratings.map(user => user.rating)\n              .reduce((accumulator, currentValue) => accumulator + currentValue)\n            : 0\n          let rating2 = app2.user.ratings.length ?\n            app2.user.ratings.map(user => user.rating)\n              .reduce((accumulator, currentValue) => accumulator + currentValue)\n            : 0\n\n          return this.state.asc * (rating1 - rating2)\n        })\n      }\n    }\n    catch {\n      this.props.history.push(\"/\")\n    }\n\n    return (\n      <div>\n        <Navbar page={\"Job\"} type={\"recruiter\"} />\n\n        <Card raised>\n          <FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"sort-label\">Sort</InputLabel>\n              <Select\n                labelId=\"sort-label\"\n                open={this.state.sortOpen}\n                onClose={() => { this.setState({ sortOpen: false }) }}\n                onOpen={() => { this.setState({ sortOpen: true }) }}\n                value={this.state.sort}\n                onChange={(event) => { this.setState({ sort: event.target.value }) }}\n              >\n                <MenuItem value={1}>Name</MenuItem>\n                <MenuItem value={2}>Application date</MenuItem>\n                <MenuItem value={3}>Rating</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"order-label\">Order</InputLabel>\n              <Select\n                labelId=\"order-label\"\n                open={this.state.orderOpen}\n                onClose={() => { this.setState({ orderOpen: false }) }}\n                onOpen={() => { this.setState({ orderOpen: true }) }}\n                value={this.state.asc}\n                onChange={(event) => { this.setState({ asc: event.target.value }) }}\n              >\n                <MenuItem value={1}>Ascending</MenuItem>\n                <MenuItem value={-1}>Descending</MenuItem>\n              </Select>\n            </FormControl>\n          </FormControl>\n        </Card>\n\n        <Container >\n          {this.state.isLoading ? <CircularProgress /> : <span></span>}\n        </Container>\n        <br /><br />\n\n        <Grid container className={classes.root} spacing={4}>\n\n          {job_applicants?.map((app) => {\n            if (app) {\n              return (\n                <Grid key={app.user._id} item>\n                  <Card className={classes.root}>\n                    <CardContent>\n\n                      <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\n                        Name: {app.user.name}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Statement of purpose: {app.application.sop}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Skills: {app.user.skills.join(\", \")}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Application Date: {(new Date(app.application.applicationDate)).toDateString()}\n                      </Typography>\n\n                      <Typography gutterBottom>\n                        Education: {app.user.education.map(edu => <span><br />{`${edu.institute} (${edu.startYear} - ${edu.endYear})`}</span>)}\n                      </Typography>\n\n                      <Rating value={\n                        app.user.ratings.length ?\n                          app.user.ratings.map(item => item.rating)\n                            .reduce((accumulator, currentValue) => accumulator + currentValue) / app.user.ratings.length\n                          : 0}\n                        readOnly />\n\n                      <Typography gutterBottom>\n                        Stage: {misc.getApplyStatus(app.application.status)}\n                      </Typography>\n\n                    </CardContent>\n\n                    <CardActions>\n\n                      <this.acceptShortlistButton app={app} />\n\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => { this.changeApplication(app, 4) }}\n                      >\n                        Reject\n                      </Button>\n                    </CardActions>\n\n                  </Card>\n                </Grid>\n              )\n            }\n          }\n          )}\n\n        </Grid>\n      </div >\n    )\n  }\n}\n\nexport default connect((state) => ({ state: state }), { ...actions })(withStyles(useStyles)(R_Job))","/home/shreyas/dev/2019113004/frontend/src/components/A_Profile.js",["293","294","295","296","297","298","299","300"],"/home/shreyas/dev/2019113004/frontend/src/components/R_CreateJob.js",["301","302","303","304","305","306"],"/home/shreyas/dev/2019113004/frontend/src/components/Login.js",[],"/home/shreyas/dev/2019113004/frontend/src/store/store.js",["307"],"import { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\nimport { loadState, saveState } from './localStorage'\n\nconst persistedState = loadState()\nconst initialState = { ...persistedState }\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, applyMiddleware(...middleware))\n\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nexport default store\n","/home/shreyas/dev/2019113004/frontend/src/misc.js",[],"/home/shreyas/dev/2019113004/frontend/src/components/styles.js",[],"/home/shreyas/dev/2019113004/frontend/src/store/actions.js",[],"/home/shreyas/dev/2019113004/frontend/src/components/Navbar.js",["308"],"/home/shreyas/dev/2019113004/frontend/src/store/localStorage.js",[],"/home/shreyas/dev/2019113004/frontend/src/store/reducer.js",["309"],"/home/shreyas/dev/2019113004/frontend/src/store/actionTypes.js",[],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":58,"column":19,"nodeType":"316","messageId":"317","endLine":58,"endColumn":21},{"ruleId":"318","severity":1,"message":"319","line":2,"column":16,"nodeType":"320","messageId":"321","endLine":2,"endColumn":20},{"ruleId":"314","severity":1,"message":"315","line":100,"column":47,"nodeType":"316","messageId":"317","endLine":100,"endColumn":49},{"ruleId":"314","severity":1,"message":"322","line":176,"column":82,"nodeType":"316","messageId":"317","endLine":176,"endColumn":84},{"ruleId":"314","severity":1,"message":"322","line":194,"column":73,"nodeType":"316","messageId":"317","endLine":194,"endColumn":75},{"ruleId":"314","severity":1,"message":"315","line":257,"column":52,"nodeType":"316","messageId":"317","endLine":257,"endColumn":54},{"ruleId":"314","severity":1,"message":"315","line":257,"column":82,"nodeType":"316","messageId":"317","endLine":257,"endColumn":84},{"ruleId":"314","severity":1,"message":"315","line":257,"column":110,"nodeType":"316","messageId":"317","endLine":257,"endColumn":112},{"ruleId":"314","severity":1,"message":"315","line":309,"column":63,"nodeType":"316","messageId":"317","endLine":309,"endColumn":65},{"ruleId":"314","severity":1,"message":"315","line":313,"column":42,"nodeType":"316","messageId":"317","endLine":313,"endColumn":44},{"ruleId":"314","severity":1,"message":"315","line":13,"column":18,"nodeType":"316","messageId":"317","endLine":13,"endColumn":20},{"ruleId":"314","severity":1,"message":"315","line":64,"column":56,"nodeType":"316","messageId":"317","endLine":64,"endColumn":58},{"ruleId":"314","severity":1,"message":"315","line":65,"column":61,"nodeType":"316","messageId":"317","endLine":65,"endColumn":63},{"ruleId":"314","severity":1,"message":"315","line":75,"column":33,"nodeType":"316","messageId":"317","endLine":75,"endColumn":35},{"ruleId":"314","severity":1,"message":"315","line":85,"column":38,"nodeType":"316","messageId":"317","endLine":85,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":113,"column":73,"nodeType":"316","messageId":"317","endLine":113,"endColumn":75},{"ruleId":"314","severity":1,"message":"315","line":150,"column":85,"nodeType":"316","messageId":"317","endLine":150,"endColumn":87},{"ruleId":"314","severity":1,"message":"315","line":171,"column":83,"nodeType":"316","messageId":"317","endLine":171,"endColumn":85},{"ruleId":"318","severity":1,"message":"323","line":16,"column":42,"nodeType":"320","messageId":"321","endLine":16,"endColumn":51},{"ruleId":"324","severity":1,"message":"325","line":93,"column":26,"nodeType":"326","messageId":"327","endLine":93,"endColumn":34,"fix":"328"},{"ruleId":"314","severity":1,"message":"315","line":112,"column":62,"nodeType":"316","messageId":"317","endLine":112,"endColumn":64},{"ruleId":"314","severity":1,"message":"322","line":113,"column":64,"nodeType":"316","messageId":"317","endLine":113,"endColumn":66},{"ruleId":"314","severity":1,"message":"315","line":114,"column":65,"nodeType":"316","messageId":"317","endLine":114,"endColumn":67},{"ruleId":"314","severity":1,"message":"315","line":153,"column":53,"nodeType":"316","messageId":"317","endLine":153,"endColumn":55},{"ruleId":"314","severity":1,"message":"315","line":153,"column":86,"nodeType":"316","messageId":"317","endLine":153,"endColumn":88},{"ruleId":"314","severity":1,"message":"315","line":166,"column":41,"nodeType":"316","messageId":"317","endLine":166,"endColumn":43},{"ruleId":"314","severity":1,"message":"315","line":168,"column":46,"nodeType":"316","messageId":"317","endLine":168,"endColumn":48},{"ruleId":"314","severity":1,"message":"315","line":179,"column":27,"nodeType":"316","messageId":"317","endLine":179,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":182,"column":32,"nodeType":"316","messageId":"317","endLine":182,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":185,"column":32,"nodeType":"316","messageId":"317","endLine":185,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":205,"column":48,"nodeType":"316","messageId":"317","endLine":205,"endColumn":50},{"ruleId":"318","severity":1,"message":"329","line":16,"column":35,"nodeType":"320","messageId":"321","endLine":16,"endColumn":45},{"ruleId":"314","severity":1,"message":"315","line":57,"column":47,"nodeType":"316","messageId":"317","endLine":57,"endColumn":49},{"ruleId":"318","severity":1,"message":"330","line":93,"column":9,"nodeType":"320","messageId":"321","endLine":93,"endColumn":12},{"ruleId":"314","severity":1,"message":"322","line":152,"column":71,"nodeType":"316","messageId":"317","endLine":152,"endColumn":73},{"ruleId":"314","severity":1,"message":"315","line":187,"column":59,"nodeType":"316","messageId":"317","endLine":187,"endColumn":61},{"ruleId":"314","severity":1,"message":"315","line":191,"column":38,"nodeType":"316","messageId":"317","endLine":191,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":68,"column":67,"nodeType":"316","messageId":"317","endLine":68,"endColumn":69},{"ruleId":"314","severity":1,"message":"315","line":88,"column":38,"nodeType":"316","messageId":"317","endLine":88,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":110,"column":62,"nodeType":"316","messageId":"317","endLine":110,"endColumn":64},{"ruleId":"314","severity":1,"message":"315","line":118,"column":44,"nodeType":"316","messageId":"317","endLine":118,"endColumn":46},{"ruleId":"314","severity":1,"message":"315","line":120,"column":54,"nodeType":"316","messageId":"317","endLine":120,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":130,"column":27,"nodeType":"316","messageId":"317","endLine":130,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":134,"column":32,"nodeType":"316","messageId":"317","endLine":134,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":138,"column":32,"nodeType":"316","messageId":"317","endLine":138,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":153,"column":27,"nodeType":"316","messageId":"317","endLine":153,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":202,"column":38,"nodeType":"333","messageId":"334","endLine":202,"endColumn":40},{"ruleId":"318","severity":1,"message":"335","line":17,"column":30,"nodeType":"320","messageId":"321","endLine":17,"endColumn":36},{"ruleId":"314","severity":1,"message":"315","line":103,"column":43,"nodeType":"316","messageId":"317","endLine":103,"endColumn":45},{"ruleId":"314","severity":1,"message":"322","line":182,"column":77,"nodeType":"316","messageId":"317","endLine":182,"endColumn":79},{"ruleId":"314","severity":1,"message":"315","line":186,"column":104,"nodeType":"316","messageId":"317","endLine":186,"endColumn":106},{"ruleId":"314","severity":1,"message":"315","line":54,"column":32,"nodeType":"316","messageId":"317","endLine":54,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":64,"column":37,"nodeType":"316","messageId":"317","endLine":64,"endColumn":39},{"ruleId":"318","severity":1,"message":"330","line":80,"column":9,"nodeType":"320","messageId":"321","endLine":80,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":82,"column":16,"nodeType":"316","messageId":"317","endLine":82,"endColumn":18},{"ruleId":"314","severity":1,"message":"315","line":104,"column":58,"nodeType":"316","messageId":"317","endLine":104,"endColumn":60},{"ruleId":"314","severity":1,"message":"322","line":108,"column":67,"nodeType":"316","messageId":"317","endLine":108,"endColumn":69},{"ruleId":"314","severity":1,"message":"315","line":109,"column":59,"nodeType":"316","messageId":"317","endLine":109,"endColumn":61},{"ruleId":"314","severity":1,"message":"315","line":117,"column":27,"nodeType":"316","messageId":"317","endLine":117,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":121,"column":32,"nodeType":"316","messageId":"317","endLine":121,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":125,"column":32,"nodeType":"316","messageId":"317","endLine":125,"endColumn":34},{"ruleId":"331","severity":1,"message":"332","line":190,"column":38,"nodeType":"333","messageId":"334","endLine":190,"endColumn":40},{"ruleId":"310","replacedBy":"336"},{"ruleId":"312","replacedBy":"337"},{"ruleId":"314","severity":1,"message":"315","line":58,"column":19,"nodeType":"316","messageId":"317","endLine":58,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":64,"column":56,"nodeType":"316","messageId":"317","endLine":64,"endColumn":58},{"ruleId":"314","severity":1,"message":"315","line":65,"column":61,"nodeType":"316","messageId":"317","endLine":65,"endColumn":63},{"ruleId":"314","severity":1,"message":"315","line":75,"column":33,"nodeType":"316","messageId":"317","endLine":75,"endColumn":35},{"ruleId":"314","severity":1,"message":"315","line":85,"column":38,"nodeType":"316","messageId":"317","endLine":85,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":113,"column":73,"nodeType":"316","messageId":"317","endLine":113,"endColumn":75},{"ruleId":"314","severity":1,"message":"315","line":150,"column":85,"nodeType":"316","messageId":"317","endLine":150,"endColumn":87},{"ruleId":"314","severity":1,"message":"315","line":171,"column":83,"nodeType":"316","messageId":"317","endLine":171,"endColumn":85},{"ruleId":"318","severity":1,"message":"335","line":17,"column":30,"nodeType":"320","messageId":"321","endLine":17,"endColumn":36},{"ruleId":"314","severity":1,"message":"315","line":103,"column":43,"nodeType":"316","messageId":"317","endLine":103,"endColumn":45},{"ruleId":"314","severity":1,"message":"322","line":182,"column":77,"nodeType":"316","messageId":"317","endLine":182,"endColumn":79},{"ruleId":"314","severity":1,"message":"315","line":186,"column":104,"nodeType":"316","messageId":"317","endLine":186,"endColumn":106},{"ruleId":"314","severity":1,"message":"315","line":68,"column":67,"nodeType":"316","messageId":"317","endLine":68,"endColumn":69},{"ruleId":"314","severity":1,"message":"315","line":88,"column":38,"nodeType":"316","messageId":"317","endLine":88,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":110,"column":62,"nodeType":"316","messageId":"317","endLine":110,"endColumn":64},{"ruleId":"314","severity":1,"message":"315","line":118,"column":44,"nodeType":"316","messageId":"317","endLine":118,"endColumn":46},{"ruleId":"314","severity":1,"message":"315","line":120,"column":54,"nodeType":"316","messageId":"317","endLine":120,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":130,"column":27,"nodeType":"316","messageId":"317","endLine":130,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":134,"column":32,"nodeType":"316","messageId":"317","endLine":134,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":138,"column":32,"nodeType":"316","messageId":"317","endLine":138,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":153,"column":27,"nodeType":"316","messageId":"317","endLine":153,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":202,"column":38,"nodeType":"333","messageId":"334","endLine":202,"endColumn":40},{"ruleId":"318","severity":1,"message":"323","line":16,"column":42,"nodeType":"320","messageId":"321","endLine":16,"endColumn":51},{"ruleId":"324","severity":1,"message":"325","line":93,"column":26,"nodeType":"326","messageId":"327","endLine":93,"endColumn":34,"fix":"338"},{"ruleId":"314","severity":1,"message":"315","line":112,"column":62,"nodeType":"316","messageId":"317","endLine":112,"endColumn":64},{"ruleId":"314","severity":1,"message":"322","line":113,"column":64,"nodeType":"316","messageId":"317","endLine":113,"endColumn":66},{"ruleId":"314","severity":1,"message":"315","line":114,"column":65,"nodeType":"316","messageId":"317","endLine":114,"endColumn":67},{"ruleId":"314","severity":1,"message":"315","line":152,"column":53,"nodeType":"316","messageId":"317","endLine":152,"endColumn":55},{"ruleId":"314","severity":1,"message":"315","line":152,"column":86,"nodeType":"316","messageId":"317","endLine":152,"endColumn":88},{"ruleId":"314","severity":1,"message":"315","line":165,"column":41,"nodeType":"316","messageId":"317","endLine":165,"endColumn":43},{"ruleId":"314","severity":1,"message":"315","line":167,"column":46,"nodeType":"316","messageId":"317","endLine":167,"endColumn":48},{"ruleId":"314","severity":1,"message":"315","line":178,"column":27,"nodeType":"316","messageId":"317","endLine":178,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":181,"column":32,"nodeType":"316","messageId":"317","endLine":181,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":184,"column":32,"nodeType":"316","messageId":"317","endLine":184,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":204,"column":48,"nodeType":"316","messageId":"317","endLine":204,"endColumn":50},{"ruleId":"314","severity":1,"message":"315","line":54,"column":32,"nodeType":"316","messageId":"317","endLine":54,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":64,"column":37,"nodeType":"316","messageId":"317","endLine":64,"endColumn":39},{"ruleId":"318","severity":1,"message":"330","line":80,"column":9,"nodeType":"320","messageId":"321","endLine":80,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":82,"column":16,"nodeType":"316","messageId":"317","endLine":82,"endColumn":18},{"ruleId":"314","severity":1,"message":"315","line":104,"column":58,"nodeType":"316","messageId":"317","endLine":104,"endColumn":60},{"ruleId":"314","severity":1,"message":"322","line":108,"column":67,"nodeType":"316","messageId":"317","endLine":108,"endColumn":69},{"ruleId":"314","severity":1,"message":"315","line":109,"column":59,"nodeType":"316","messageId":"317","endLine":109,"endColumn":61},{"ruleId":"314","severity":1,"message":"315","line":117,"column":27,"nodeType":"316","messageId":"317","endLine":117,"endColumn":29},{"ruleId":"314","severity":1,"message":"315","line":121,"column":32,"nodeType":"316","messageId":"317","endLine":121,"endColumn":34},{"ruleId":"314","severity":1,"message":"315","line":125,"column":32,"nodeType":"316","messageId":"317","endLine":125,"endColumn":34},{"ruleId":"331","severity":1,"message":"332","line":190,"column":38,"nodeType":"333","messageId":"334","endLine":190,"endColumn":40},{"ruleId":"314","severity":1,"message":"315","line":100,"column":47,"nodeType":"316","messageId":"317","endLine":100,"endColumn":49},{"ruleId":"314","severity":1,"message":"322","line":176,"column":82,"nodeType":"316","messageId":"317","endLine":176,"endColumn":84},{"ruleId":"314","severity":1,"message":"322","line":194,"column":73,"nodeType":"316","messageId":"317","endLine":194,"endColumn":75},{"ruleId":"314","severity":1,"message":"315","line":257,"column":52,"nodeType":"316","messageId":"317","endLine":257,"endColumn":54},{"ruleId":"314","severity":1,"message":"315","line":257,"column":82,"nodeType":"316","messageId":"317","endLine":257,"endColumn":84},{"ruleId":"314","severity":1,"message":"315","line":257,"column":110,"nodeType":"316","messageId":"317","endLine":257,"endColumn":112},{"ruleId":"314","severity":1,"message":"315","line":309,"column":63,"nodeType":"316","messageId":"317","endLine":309,"endColumn":65},{"ruleId":"314","severity":1,"message":"315","line":313,"column":42,"nodeType":"316","messageId":"317","endLine":313,"endColumn":44},{"ruleId":"318","severity":1,"message":"329","line":16,"column":35,"nodeType":"320","messageId":"321","endLine":16,"endColumn":45},{"ruleId":"314","severity":1,"message":"315","line":57,"column":47,"nodeType":"316","messageId":"317","endLine":57,"endColumn":49},{"ruleId":"318","severity":1,"message":"330","line":93,"column":9,"nodeType":"320","messageId":"321","endLine":93,"endColumn":12},{"ruleId":"314","severity":1,"message":"322","line":152,"column":71,"nodeType":"316","messageId":"317","endLine":152,"endColumn":73},{"ruleId":"314","severity":1,"message":"315","line":187,"column":59,"nodeType":"316","messageId":"317","endLine":187,"endColumn":61},{"ruleId":"314","severity":1,"message":"315","line":191,"column":38,"nodeType":"316","messageId":"317","endLine":191,"endColumn":40},{"ruleId":"318","severity":1,"message":"339","line":1,"column":40,"nodeType":"320","messageId":"321","endLine":1,"endColumn":47},{"ruleId":"314","severity":1,"message":"315","line":13,"column":18,"nodeType":"316","messageId":"317","endLine":13,"endColumn":20},{"ruleId":"318","severity":1,"message":"319","line":2,"column":16,"nodeType":"320","messageId":"321","endLine":2,"endColumn":20},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'Container' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"342","text":"343"},"'DeleteIcon' is defined but never used.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Router' is defined but never used.",["340"],["341"],{"range":"344","text":"343"},"'compose' is defined but never used.","no-global-assign","no-unsafe-negation",[2318,2318],"()",[2318,2318]]